import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class Tests {

    @Test
    public void testGetBookings() {
        Response response = RestAssured.get("https://restful-booker.herokuapp.com/booking");
        assertEquals(200, response.getStatusCode());

        response.then().log().body();

    }

    @Test
    public void testCreateBookingWithMissingData() {
        String requestBody = "{\n" +
                "  \"firstname\": \"Jim\"\n" +
                "}";

        Response response = RestAssured.given()
                .contentType(ContentType.JSON)
                .body(requestBody)
                .post("https://restful-booker.herokuapp.com/booking");

        assertEquals(400, response.getStatusCode());
        response.then().log().body();
    }

    @Test
    public void testDeleteBooking() {
        Response response = RestAssured.given()
                .auth().basic("admin", "123")
                .contentType(ContentType.JSON)
                .delete("https://restful-booker.herokuapp.com/booking/1");
        assertEquals(201, response.getStatusCode());

        response.then().log().body();
    }

    @Test
    public void testGetNonExistentBooking() {
        int nonExistentBookingId = 999999;

        Response response = RestAssured.given()
                .when()
                .get("https://restful-booker.herokuapp.com/booking/" + nonExistentBookingId);

        assertEquals(404, response.getStatusCode());

        response.then().log().body();
    }

    @Test
    public void testGetValidBooking() {
        int validBookingId = 1;

        Response response = RestAssured.given()
                .when()
                .get("https://restful-booker.herokuapp.com/booking/" + validBookingId);


        assertEquals(200, response.getStatusCode());
        response.then().log().body();
    }
}

